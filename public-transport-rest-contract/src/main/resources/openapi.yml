openapi: 3.0.1
info:
  title: Public transport ticket endpoint
  description: >
    This is an application which is simulate a public transport ticket handling.
    This application based on Budapest public transport (BKK) ticket types.
  contact:
    email: karoly.froemel@gmail.com
  version: 1.0.0
servers:
  - url: http://localhost:8081

paths:
  /tickets:
    get:
      tags:
        - ticket
      operationId: getTicketTypes
      summary: Get all ticket types
      description: Get all types of tickets to show it for the user.
      responses:
        '200':
          description: Get all types of tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketType'
        '404':
          description: Ticket not found!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tickets/{userId}:
    get:
      tags:
        - ticket
      summary: Get all tickets of user
      operationId: getUserTicketsById
      description: Get all tickets of user.
      parameters:
        - name: userId
          in: path
          required: true
          description: user id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Get all tickets which are belong to a specific user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
        '404':
          description: Tickets not found!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tickets/purchaseTicket:
    post:
      tags:
        - ticket
      summary: Purchase ticket
      operationId: purchaseTicket
      description: Purchase ticket.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseTicket'
      responses:
        '201':
          description: Ticket purchased
        '404':
          description: Ticket purchase failed!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

    TicketType:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: integer
        expirationTime:
          type: integer
      required:
        - name
        - description
        - price

    Ticket:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        purchaseDate:
          type: string
        validFrom:
          type: string
        validTo:
          type: string
        validationDate:
          type: string
      required:
        - id
        - name
        - purchaseDate
        - validFrom
        - validTo

    PurchaseTicket:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        ticketName:
          type: string
        validFrom:
          type: string